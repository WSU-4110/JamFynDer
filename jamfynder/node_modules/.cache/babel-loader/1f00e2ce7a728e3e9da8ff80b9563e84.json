{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Devices from './Devices';\nimport Volume from './Volume';\nimport { px, styled } from '../styles';\nvar Wrapper = styled('div')({\n  alignItems: 'center',\n  display: 'flex',\n  justifyContent: 'flex-end',\n  paddingRight: px(10),\n  'pointer-events': 'none',\n  '> div + div': {\n    marginLeft: px(10)\n  },\n  '@media (max-width: 1023px)': {\n    bottom: 0,\n    position: 'absolute',\n    right: 0,\n    width: 'auto'\n  }\n}, function (_a) {\n  var style = _a.style;\n  return {\n    height: px(style.h)\n  };\n}, 'ActionsRSWP');\nexport default function Actions(props) {\n  var currentDeviceId = props.currentDeviceId,\n    deviceId = props.deviceId,\n    devices = props.devices,\n    isDevicesOpen = props.isDevicesOpen,\n    locale = props.locale,\n    onClickDevice = props.onClickDevice,\n    playerPosition = props.playerPosition,\n    setVolume = props.setVolume,\n    styles = props.styles,\n    volume = props.volume;\n  return _jsxs(Wrapper, __assign({\n    style: {\n      h: styles.height\n    }\n  }, {\n    children: [currentDeviceId && _jsx(Volume, {\n      playerPosition: playerPosition,\n      setVolume: setVolume,\n      styles: styles,\n      title: locale.volume,\n      volume: volume\n    }), _jsx(Devices, {\n      currentDeviceId: currentDeviceId,\n      deviceId: deviceId,\n      devices: devices,\n      onClickDevice: onClickDevice,\n      open: isDevicesOpen,\n      playerPosition: playerPosition,\n      styles: styles,\n      title: locale.devices\n    })]\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}