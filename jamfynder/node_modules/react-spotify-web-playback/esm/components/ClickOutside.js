var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { jsx as _jsx } from "react/jsx-runtime";
import * as React from 'react';
var ClickOutside = /** @class */ (function (_super) {
    __extends(ClickOutside, _super);
    function ClickOutside(props) {
        var _this = _super.call(this, props) || this;
        Object.defineProperty(_this, "container", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(_this, "isTouch", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(_this, "handleClick", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: function (event) {
                if (event.type === 'touchend') {
                    _this.isTouch = true;
                }
                if (event.type === 'click' && _this.isTouch) {
                    return;
                }
                var onClick = _this.props.onClick;
                var el = _this.container;
                if (el && !el.contains(event.target)) {
                    onClick();
                }
            }
        });
        _this.container = null;
        _this.setRef = _this.setRef.bind(_this);
        _this.isTouch = false;
        return _this;
    }
    Object.defineProperty(ClickOutside.prototype, "componentDidMount", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function () {
            document.addEventListener('touchend', this.handleClick, true);
            document.addEventListener('click', this.handleClick, true);
        }
    });
    Object.defineProperty(ClickOutside.prototype, "componentWillUnmount", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function () {
            document.removeEventListener('touchend', this.handleClick, true);
            document.removeEventListener('click', this.handleClick, true);
        }
    });
    Object.defineProperty(ClickOutside.prototype, "setRef", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function (ref) {
            this.container = ref;
        }
    });
    Object.defineProperty(ClickOutside.prototype, "render", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function () {
            var _a = this.props, children = _a.children, onClick = _a.onClick, props = __rest(_a, ["children", "onClick"]);
            return (_jsx("div", __assign({}, props, { ref: this.setRef }, { children: children })));
        }
    });
    return ClickOutside;
}(React.PureComponent));
export default ClickOutside;
//# sourceMappingURL=ClickOutside.js.map