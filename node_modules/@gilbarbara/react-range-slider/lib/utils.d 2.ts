import * as React from 'react';
import { PlainObject, RangeSliderPosition, RangeSliderProps } from './types';
declare type BaseProps = Required<Pick<RangeSliderProps, 'axis' | 'xMax' | 'xMin' | 'xStep' | 'yMax' | 'yMin' | 'yStep'>>;
export declare function getBaseProps(props?: RangeSliderProps): BaseProps;
export declare function getCoordinates(event: MouseEvent | React.MouseEvent | TouchEvent | React.TouchEvent, lastPosition: RangeSliderPosition): RangeSliderPosition;
export declare function getPosition(position: RangeSliderPosition, props: RangeSliderProps, el: HTMLDivElement | null): RangeSliderPosition;
/**
 * Get a normalized value
 */
export declare function getNormalizedValue(name: 'x' | 'y', props: RangeSliderProps): number;
/**
 * Check if the value is a number
 */
export declare function isNumber(value: unknown): value is number;
/**
 * Check if the value is undefined
 */
export declare function isUndefined(value: unknown): value is undefined;
/**
 * Parse a string into a number or return it if it's already a number
 */
export declare function parseNumber(value: string | number): number;
/**
 *  Remove properties from an object
 */
export declare function removeProperties<T extends PlainObject, K extends keyof T>(input: T, ...filter: K[]): Omit<T, K>;
export declare function round(value: number, increment: number): number;
export {};
