var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import { keyframes, px, styled } from '../styles';
var Wrapper = styled('div')({
    margin: '0 auto',
    position: 'relative',
    '> div': {
        borderRadius: '50%',
        borderStyle: 'solid',
        borderWidth: 0,
        boxSizing: 'border-box',
        height: 0,
        left: '50%',
        position: 'absolute',
        top: '50%',
        transform: 'translate(-50%, -50%)',
        width: 0,
    },
}, function (_a) {
    var style = _a.style;
    var pulse = keyframes({
        '0%': {
            height: 0,
            width: 0,
        },
        '30%': {
            borderWidth: px(8),
            height: px(style.loaderSize),
            opacity: 1,
            width: px(style.loaderSize),
        },
        '100%': {
            borderWidth: 0,
            height: px(style.loaderSize),
            opacity: 0,
            width: px(style.loaderSize),
        },
    });
    return {
        height: px(style.loaderSize),
        width: px(style.loaderSize),
        '> div': {
            animation: "".concat(pulse, " 1.15s infinite cubic-bezier(0.215, 0.61, 0.355, 1)"),
            borderColor: style.loaderColor,
        },
    };
}, 'LoaderRSWP');
export default function Loader(_a) {
    var _b = _a.styles, loaderColor = _b.loaderColor, loaderSize = _b.loaderSize;
    return (_jsx(Wrapper, __assign({ style: { loaderColor: loaderColor, loaderSize: loaderSize } }, { children: _jsx("div", {}) })));
}
//# sourceMappingURL=Loader.js.map