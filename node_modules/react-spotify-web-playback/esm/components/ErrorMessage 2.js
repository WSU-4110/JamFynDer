var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import { px, styled } from '../styles';
var Wrapper = styled('p')({
    textAlign: 'center',
    width: '100%',
}, function (_a) {
    var style = _a.style;
    return ({
        borderTop: "1px solid ".concat(style.errorColor),
        color: style.errorColor,
        height: px(style.h),
        lineHeight: px(style.h),
    });
}, 'ErrorRSWP');
export default function ErrorMessage(_a) {
    var children = _a.children, _b = _a.styles, errorColor = _b.errorColor, height = _b.height;
    return _jsx(Wrapper, __assign({ style: { errorColor: errorColor, h: height } }, { children: children }));
}
//# sourceMappingURL=ErrorMessage.js.map