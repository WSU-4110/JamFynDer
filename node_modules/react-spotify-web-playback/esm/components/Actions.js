var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import Devices from './Devices';
import Volume from './Volume';
import { px, styled } from '../styles';
var Wrapper = styled('div')({
    alignItems: 'center',
    display: 'flex',
    justifyContent: 'flex-end',
    paddingRight: px(10),
    'pointer-events': 'none',
    '> div + div': {
        marginLeft: px(10),
    },
    '@media (max-width: 1023px)': {
        bottom: 0,
        position: 'absolute',
        right: 0,
        width: 'auto',
    },
}, function (_a) {
    var style = _a.style;
    return ({
        height: px(style.h),
    });
}, 'ActionsRSWP');
export default function Actions(props) {
    var currentDeviceId = props.currentDeviceId, deviceId = props.deviceId, devices = props.devices, isDevicesOpen = props.isDevicesOpen, locale = props.locale, onClickDevice = props.onClickDevice, playerPosition = props.playerPosition, setVolume = props.setVolume, styles = props.styles, volume = props.volume;
    return (_jsxs(Wrapper, __assign({ style: { h: styles.height } }, { children: [currentDeviceId && (_jsx(Volume, { playerPosition: playerPosition, setVolume: setVolume, styles: styles, title: locale.volume, volume: volume })), _jsx(Devices, { currentDeviceId: currentDeviceId, deviceId: deviceId, devices: devices, onClickDevice: onClickDevice, open: isDevicesOpen, playerPosition: playerPosition, styles: styles, title: locale.devices })] })));
}
//# sourceMappingURL=Actions.js.map