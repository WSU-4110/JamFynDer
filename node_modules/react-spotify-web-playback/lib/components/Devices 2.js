"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var React = require("react");
var ClickOutside_1 = require("./ClickOutside");
var Devices_1 = require("./icons/Devices");
var styles_1 = require("../styles");
var Wrapper = (0, styles_1.styled)('div')({
    'pointer-events': 'all',
    position: 'relative',
    zIndex: 20,
    '> div': {
        display: 'flex',
        flexDirection: 'column',
        padding: (0, styles_1.px)(8),
        position: 'absolute',
        right: "-".concat((0, styles_1.px)(3)),
        button: {
            display: 'block',
            padding: (0, styles_1.px)(8),
            whiteSpace: 'nowrap',
            '&.rswp__devices__active': {
                fontWeight: 'bold',
            },
        },
    },
    '> button': {
        fontSize: (0, styles_1.px)(26),
    },
}, function (_a) {
    var _b;
    var style = _a.style;
    return ({
        '> button': {
            color: style.c,
        },
        '> div': (_b = {
                backgroundColor: style.bgColor,
                boxShadow: style.altColor ? "1px 1px 10px ".concat(style.altColor) : 'none'
            },
            _b[style.p] = '120%',
            _b.button = {
                color: style.c,
            },
            _b),
    });
}, 'DevicesRSWP');
var Devices = /** @class */ (function (_super) {
    __extends(Devices, _super);
    function Devices(props) {
        var _this = _super.call(this, props) || this;
        Object.defineProperty(_this, "handleClickSetDevice", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: function (event) {
                var onClickDevice = _this.props.onClickDevice;
                var dataset = event.currentTarget.dataset;
                /* istanbul ignore else */
                if (dataset.id) {
                    onClickDevice(dataset.id);
                    _this.setState({ isOpen: false });
                }
            }
        });
        Object.defineProperty(_this, "handleClickToggleDevices", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: function () {
                _this.setState(function (state) { return ({ isOpen: !state.isOpen }); });
            }
        });
        _this.state = {
            isOpen: props.open,
        };
        return _this;
    }
    Object.defineProperty(Devices.prototype, "render", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function () {
            var _this = this;
            var isOpen = this.state.isOpen;
            var _a = this.props, currentDeviceId = _a.currentDeviceId, deviceId = _a.deviceId, devices = _a.devices, playerPosition = _a.playerPosition, _b = _a.styles, activeColor = _b.activeColor, altColor = _b.altColor, bgColor = _b.bgColor, color = _b.color, title = _a.title;
            return ((0, jsx_runtime_1.jsx)(Wrapper, __assign({ style: {
                    altColor: altColor,
                    bgColor: bgColor,
                    c: currentDeviceId && deviceId && currentDeviceId !== deviceId ? activeColor : color,
                    p: playerPosition,
                } }, { children: !!devices.length && ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [isOpen && ((0, jsx_runtime_1.jsx)(ClickOutside_1.default, __assign({ onClick: this.handleClickToggleDevices }, { children: devices.map(function (d) { return ((0, jsx_runtime_1.jsx)("button", __assign({ className: d.id === currentDeviceId ? 'rswp__devices__active' : undefined, "data-id": d.id, onClick: _this.handleClickSetDevice, type: "button" }, { children: d.name }), d.id)); }) }))), (0, jsx_runtime_1.jsx)("button", __assign({ "aria-label": title, onClick: this.handleClickToggleDevices, title: title, type: "button" }, { children: (0, jsx_runtime_1.jsx)(Devices_1.default, {}) }))] })) })));
        }
    });
    return Devices;
}(React.PureComponent));
exports.default = Devices;
//# sourceMappingURL=Devices.js.map